// Script pour tester la migration du statut ASSIGNED
const { databaseService, forceDatabaseMigrations } = require('./lib/database');

async function testAssignedStatus() {
  try {
    console.log('üöÄ Test de la migration ASSIGNED...');
    
    // Initialiser la base de donn√©es
    await databaseService.init();
    console.log('‚úÖ Base de donn√©es initialis√©e');
    
    // Forcer les migrations
    console.log('üîÑ For√ßage des migrations...');
    await forceDatabaseMigrations();
    console.log('‚úÖ Migrations forc√©es termin√©es');
    
    // Tester l'insertion d'une mission avec le statut ASSIGNED
    console.log('üß™ Test d\'insertion avec statut ASSIGNED...');
    const testMissionId = `test-assigned-${Date.now()}`;
    
    const result = await databaseService.db.runAsync(`
      INSERT INTO missions (
        id, title, status, driverId, 
        departureLocation, departureAddress, 
        departureLat, departureLng, scheduledDepartureAt,
        arrivalLocation, arrivalAddress, 
        arrivalLat, arrivalLng, estimatedArrivalAt,
        maxPassengers, companyId
      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
    `, [
      testMissionId, 'Test Mission ASSIGNED', 'ASSIGNED', null,
      'D√©part Test', '123 Rue Test', 48.8566, 2.3522, new Date().toISOString(),
      'Arriv√©e Test', '456 Avenue Test', 48.8606, 2.3376, new Date().toISOString(),
      4, 'test-company'
    ]);
    
    console.log('‚úÖ Mission avec statut ASSIGNED cr√©√©e avec succ√®s!');
    console.log('Result:', result);
    
    // V√©rifier que la mission a √©t√© cr√©√©e
    const createdMission = await databaseService.db.getFirstAsync(
      'SELECT * FROM missions WHERE id = ?', [testMissionId]
    );
    
    console.log('üìã Mission cr√©√©e:', createdMission);
    
    // Nettoyer - supprimer la mission de test
    await databaseService.db.runAsync('DELETE FROM missions WHERE id = ?', [testMissionId]);
    console.log('üßπ Mission de test supprim√©e');
    
    console.log('üéâ Test r√©ussi! Le statut ASSIGNED fonctionne correctement.');
    
  } catch (error) {
    console.error('‚ùå Erreur lors du test:', error);
    process.exit(1);
  }
}

// Ex√©cuter le test
testAssignedStatus()
  .then(() => {
    console.log('‚úÖ Test termin√© avec succ√®s');
    process.exit(0);
  })
  .catch((error) => {
    console.error('‚ùå Test √©chou√©:', error);
    process.exit(1);
  });