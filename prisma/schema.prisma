// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DATABASE_URL")
}

model User {
  id            String   @id @default(cuid())
  email         String   @unique
  firstName     String
  lastName      String
  licenseNumber String   @unique
  phoneNumber   String?
  role          UserRole @default(DRIVER)
  isActive      Boolean  @default(true)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // Relations
  missions Mission[]

  @@map("users")
}

model Company {
  id          String @id @default(cuid())
  name        String
  address     String
  phoneNumber String
  email       String
  contactPerson String

  // Relations
  missions Mission[]

  @@map("companies")
}

model Mission {
  id                    String        @id @default(cuid())
  title                 String
  description           String?
  status                MissionStatus @default(PENDING)
  
  // Departure information
  departureLocation     String
  departureAddress      String
  departureLat          Float
  departureLng          Float
  scheduledDepartureAt  DateTime
  actualDepartureAt     DateTime?
  
  // Arrival information
  arrivalLocation       String
  arrivalAddress        String
  arrivalLat            Float
  arrivalLng            Float
  estimatedArrivalAt    DateTime
  actualArrivalAt       DateTime?
  
  // Route information
  routePolyline         String? // Encoded polyline for the route
  distance              Float? // Distance in kilometers
  estimatedDuration     Int? // Duration in minutes
  
  // Passengers information
  maxPassengers         Int
  currentPassengers     Int      @default(0)
  
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  // Relations
  driverId              String
  driver                User     @relation(fields: [driverId], references: [id])
  companyId             String
  company               Company  @relation(fields: [companyId], references: [id])

  @@map("missions")
}

enum UserRole {
  DRIVER
  ADMIN
}

enum MissionStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
  CANCELLED
}
